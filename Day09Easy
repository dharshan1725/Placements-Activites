import java.util.Scanner;
class ListNode {
    int val;
    ListNode next;
    ListNode(int val) 
{
        this.val = val;
        this.next = null;
    }
}
public class Main {
    public boolean hasCycle(ListNode head) {
        if(head==null || head.next==null)
        return false;
        
        ListNode slow=head;
        ListNode fast=head;
        
        while(fast.next!=null && fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
            
            if(slow==fast){
                return true;
            }
        }
        return false;
    }
    public static ListNode createLinkedList(int[] values, int pos) {
        ListNode dummy = new ListNode(0);
        ListNode current = dummy;
        ListNode cycleNode = null;

        for (int i = 0; i < values.length; i++) {
            current.next = new ListNode(values[i]);
            current = current.next;
            if (i == pos) {
                cycleNode = current;
            }
        }

        if (pos != -1) {
            current.next = cycleNode;
        }
        return dummy.next;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Main detector = new Main(); 
        int n = scanner.nextInt();
        int[] values = new int[n];
        for (int i = 0; i < n; i++) {
            values[i] = scanner.nextInt();
        }

        int pos = scanner.nextInt();
        ListNode head = createLinkedList(values, pos);
        boolean result = detector.hasCycle(head);
        System.out.println( result);
    }
}
